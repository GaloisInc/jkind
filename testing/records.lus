-- This example exercises the flattening of records
--
-- Expected output:
-- VALID PROPERTIES: [lemma, prop2]
-- INVALID PROPERTIES: [prop1] (K = 11)

type point = { x : int; y : int };
type weighted_point = { weight : real; p : point };

node main(delta1, delta2 : subrange [-1, 1] of int) returns ();
var
  wp1, wp2 : weighted_point;
  prop1, prop2, lemma : bool;
let
  wp1 = {weight = 1.0 -> pre(wp2.weight);
         p = {x = 0 -> pre(wp1.p.x) + 1;
              y = 0 -> pre(wp1.p.y) + delta1}};
  wp2 = {weight = 2.0 -> pre(wp1.weight);
         p = {x = 0 -> pre(wp2.p.x) + 1;
         y = 20 -> pre(wp2.p.y) + delta2}};

  prop1 = not (wp1.p = wp2.p);
  --%PROPERTY prop1;

  -- This lemma is required for prop2
  lemma = wp1.weight <> wp2.weight;
  --%PROPERTY lemma;
  
  prop2 = wp1 <> wp2;
  --%PROPERTY prop2;
tel;
