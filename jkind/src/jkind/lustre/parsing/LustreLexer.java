// Generated from Lustre.g4 by ANTLR 4.2
package jkind.lustre.parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LustreLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__49=1, T__48=2, T__47=3, T__46=4, T__45=5, T__44=6, T__43=7, T__42=8, 
		T__41=9, T__40=10, T__39=11, T__38=12, T__37=13, T__36=14, T__35=15, T__34=16, 
		T__33=17, T__32=18, T__31=19, T__30=20, T__29=21, T__28=22, T__27=23, 
		T__26=24, T__25=25, T__24=26, T__23=27, T__22=28, T__21=29, T__20=30, 
		T__19=31, T__18=32, T__17=33, T__16=34, T__15=35, T__14=36, T__13=37, 
		T__12=38, T__11=39, T__10=40, T__9=41, T__8=42, T__7=43, T__6=44, T__5=45, 
		T__4=46, T__3=47, T__2=48, T__1=49, T__0=50, REAL=51, BOOL=52, INT=53, 
		ID=54, WS=55, SL_COMMENT=56, ML_COMMENT=57, ERROR=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'subrange'", "'of'", "','", "'-'", "'['", "'node'", "'*'", "'or'", 
		"':'", "'('", "'not'", "'if'", "'int'", "'floor'", "'<'", "'var'", "'<='", 
		"'{'", "'and'", "'let'", "'condact'", "'tel'", "'else'", "'}'", "'struct'", 
		"'->'", "'xor'", "'bool'", "')'", "'.'", "'pre'", "'=>'", "'+'", "'<>'", 
		"'='", "'--%PROPERTY'", "';'", "'div'", "'const'", "'>'", "'type'", "'mod'", 
		"'then'", "'returns'", "'/'", "'--%MAIN'", "'>='", "'assert'", "'real'", 
		"REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", "ML_COMMENT", "ERROR"
	};
	public static final String[] ruleNames = {
		"T__49", "T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42", 
		"T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", 
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", "ML_COMMENT", 
		"ERROR"
	};


	public LustreLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lustre.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2<\u0185\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\3\2\3\2\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3"+
		"\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3"+
		"\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3"+
		"\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3"+
		"\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3"+
		"\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3"+
		"\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3"+
		"\36\3\37\3\37\3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3$\3%\3%\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)"+
		"\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64"+
		"\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\5\65\u014c\n\65\3\66"+
		"\6\66\u014f\n\66\r\66\16\66\u0150\3\67\3\67\7\67\u0155\n\67\f\67\16\67"+
		"\u0158\13\67\38\68\u015b\n8\r8\168\u015c\38\38\39\39\39\39\39\79\u0166"+
		"\n9\f9\169\u0169\139\39\59\u016c\n9\39\59\u016f\n9\39\59\u0172\n9\39\3"+
		"9\3:\3:\3:\3:\7:\u017a\n:\f:\16:\u017d\13:\3:\3:\3:\3:\3:\3;\3;\3\u017b"+
		"\2<\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:s;u<\3\2\b\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\16\17\"\""+
		"\5\2\f\f\17\17\'\'\4\2\f\f\17\17\u018d\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2"+
		"\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2"+
		"\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3"+
		"\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3"+
		"\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65"+
		"\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3"+
		"\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2"+
		"\2\2u\3\2\2\2\3w\3\2\2\2\5y\3\2\2\2\7\u0082\3\2\2\2\t\u0085\3\2\2\2\13"+
		"\u0087\3\2\2\2\r\u0089\3\2\2\2\17\u008b\3\2\2\2\21\u0090\3\2\2\2\23\u0092"+
		"\3\2\2\2\25\u0095\3\2\2\2\27\u0097\3\2\2\2\31\u0099\3\2\2\2\33\u009d\3"+
		"\2\2\2\35\u00a0\3\2\2\2\37\u00a4\3\2\2\2!\u00aa\3\2\2\2#\u00ac\3\2\2\2"+
		"%\u00b0\3\2\2\2\'\u00b3\3\2\2\2)\u00b5\3\2\2\2+\u00b9\3\2\2\2-\u00bd\3"+
		"\2\2\2/\u00c5\3\2\2\2\61\u00c9\3\2\2\2\63\u00ce\3\2\2\2\65\u00d0\3\2\2"+
		"\2\67\u00d7\3\2\2\29\u00da\3\2\2\2;\u00de\3\2\2\2=\u00e3\3\2\2\2?\u00e5"+
		"\3\2\2\2A\u00e7\3\2\2\2C\u00eb\3\2\2\2E\u00ee\3\2\2\2G\u00f0\3\2\2\2I"+
		"\u00f3\3\2\2\2K\u00f5\3\2\2\2M\u0101\3\2\2\2O\u0103\3\2\2\2Q\u0107\3\2"+
		"\2\2S\u010d\3\2\2\2U\u010f\3\2\2\2W\u0114\3\2\2\2Y\u0118\3\2\2\2[\u011d"+
		"\3\2\2\2]\u0125\3\2\2\2_\u0127\3\2\2\2a\u012f\3\2\2\2c\u0132\3\2\2\2e"+
		"\u0139\3\2\2\2g\u013e\3\2\2\2i\u014b\3\2\2\2k\u014e\3\2\2\2m\u0152\3\2"+
		"\2\2o\u015a\3\2\2\2q\u0160\3\2\2\2s\u0175\3\2\2\2u\u0183\3\2\2\2wx\7_"+
		"\2\2x\4\3\2\2\2yz\7u\2\2z{\7w\2\2{|\7d\2\2|}\7t\2\2}~\7c\2\2~\177\7p\2"+
		"\2\177\u0080\7i\2\2\u0080\u0081\7g\2\2\u0081\6\3\2\2\2\u0082\u0083\7q"+
		"\2\2\u0083\u0084\7h\2\2\u0084\b\3\2\2\2\u0085\u0086\7.\2\2\u0086\n\3\2"+
		"\2\2\u0087\u0088\7/\2\2\u0088\f\3\2\2\2\u0089\u008a\7]\2\2\u008a\16\3"+
		"\2\2\2\u008b\u008c\7p\2\2\u008c\u008d\7q\2\2\u008d\u008e\7f\2\2\u008e"+
		"\u008f\7g\2\2\u008f\20\3\2\2\2\u0090\u0091\7,\2\2\u0091\22\3\2\2\2\u0092"+
		"\u0093\7q\2\2\u0093\u0094\7t\2\2\u0094\24\3\2\2\2\u0095\u0096\7<\2\2\u0096"+
		"\26\3\2\2\2\u0097\u0098\7*\2\2\u0098\30\3\2\2\2\u0099\u009a\7p\2\2\u009a"+
		"\u009b\7q\2\2\u009b\u009c\7v\2\2\u009c\32\3\2\2\2\u009d\u009e\7k\2\2\u009e"+
		"\u009f\7h\2\2\u009f\34\3\2\2\2\u00a0\u00a1\7k\2\2\u00a1\u00a2\7p\2\2\u00a2"+
		"\u00a3\7v\2\2\u00a3\36\3\2\2\2\u00a4\u00a5\7h\2\2\u00a5\u00a6\7n\2\2\u00a6"+
		"\u00a7\7q\2\2\u00a7\u00a8\7q\2\2\u00a8\u00a9\7t\2\2\u00a9 \3\2\2\2\u00aa"+
		"\u00ab\7>\2\2\u00ab\"\3\2\2\2\u00ac\u00ad\7x\2\2\u00ad\u00ae\7c\2\2\u00ae"+
		"\u00af\7t\2\2\u00af$\3\2\2\2\u00b0\u00b1\7>\2\2\u00b1\u00b2\7?\2\2\u00b2"+
		"&\3\2\2\2\u00b3\u00b4\7}\2\2\u00b4(\3\2\2\2\u00b5\u00b6\7c\2\2\u00b6\u00b7"+
		"\7p\2\2\u00b7\u00b8\7f\2\2\u00b8*\3\2\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb"+
		"\7g\2\2\u00bb\u00bc\7v\2\2\u00bc,\3\2\2\2\u00bd\u00be\7e\2\2\u00be\u00bf"+
		"\7q\2\2\u00bf\u00c0\7p\2\2\u00c0\u00c1\7f\2\2\u00c1\u00c2\7c\2\2\u00c2"+
		"\u00c3\7e\2\2\u00c3\u00c4\7v\2\2\u00c4.\3\2\2\2\u00c5\u00c6\7v\2\2\u00c6"+
		"\u00c7\7g\2\2\u00c7\u00c8\7n\2\2\u00c8\60\3\2\2\2\u00c9\u00ca\7g\2\2\u00ca"+
		"\u00cb\7n\2\2\u00cb\u00cc\7u\2\2\u00cc\u00cd\7g\2\2\u00cd\62\3\2\2\2\u00ce"+
		"\u00cf\7\177\2\2\u00cf\64\3\2\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7v\2"+
		"\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7w\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6"+
		"\7v\2\2\u00d6\66\3\2\2\2\u00d7\u00d8\7/\2\2\u00d8\u00d9\7@\2\2\u00d98"+
		"\3\2\2\2\u00da\u00db\7z\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7t\2\2\u00dd"+
		":\3\2\2\2\u00de\u00df\7d\2\2\u00df\u00e0\7q\2\2\u00e0\u00e1\7q\2\2\u00e1"+
		"\u00e2\7n\2\2\u00e2<\3\2\2\2\u00e3\u00e4\7+\2\2\u00e4>\3\2\2\2\u00e5\u00e6"+
		"\7\60\2\2\u00e6@\3\2\2\2\u00e7\u00e8\7r\2\2\u00e8\u00e9\7t\2\2\u00e9\u00ea"+
		"\7g\2\2\u00eaB\3\2\2\2\u00eb\u00ec\7?\2\2\u00ec\u00ed\7@\2\2\u00edD\3"+
		"\2\2\2\u00ee\u00ef\7-\2\2\u00efF\3\2\2\2\u00f0\u00f1\7>\2\2\u00f1\u00f2"+
		"\7@\2\2\u00f2H\3\2\2\2\u00f3\u00f4\7?\2\2\u00f4J\3\2\2\2\u00f5\u00f6\7"+
		"/\2\2\u00f6\u00f7\7/\2\2\u00f7\u00f8\7\'\2\2\u00f8\u00f9\7R\2\2\u00f9"+
		"\u00fa\7T\2\2\u00fa\u00fb\7Q\2\2\u00fb\u00fc\7R\2\2\u00fc\u00fd\7G\2\2"+
		"\u00fd\u00fe\7T\2\2\u00fe\u00ff\7V\2\2\u00ff\u0100\7[\2\2\u0100L\3\2\2"+
		"\2\u0101\u0102\7=\2\2\u0102N\3\2\2\2\u0103\u0104\7f\2\2\u0104\u0105\7"+
		"k\2\2\u0105\u0106\7x\2\2\u0106P\3\2\2\2\u0107\u0108\7e\2\2\u0108\u0109"+
		"\7q\2\2\u0109\u010a\7p\2\2\u010a\u010b\7u\2\2\u010b\u010c\7v\2\2\u010c"+
		"R\3\2\2\2\u010d\u010e\7@\2\2\u010eT\3\2\2\2\u010f\u0110\7v\2\2\u0110\u0111"+
		"\7{\2\2\u0111\u0112\7r\2\2\u0112\u0113\7g\2\2\u0113V\3\2\2\2\u0114\u0115"+
		"\7o\2\2\u0115\u0116\7q\2\2\u0116\u0117\7f\2\2\u0117X\3\2\2\2\u0118\u0119"+
		"\7v\2\2\u0119\u011a\7j\2\2\u011a\u011b\7g\2\2\u011b\u011c\7p\2\2\u011c"+
		"Z\3\2\2\2\u011d\u011e\7t\2\2\u011e\u011f\7g\2\2\u011f\u0120\7v\2\2\u0120"+
		"\u0121\7w\2\2\u0121\u0122\7t\2\2\u0122\u0123\7p\2\2\u0123\u0124\7u\2\2"+
		"\u0124\\\3\2\2\2\u0125\u0126\7\61\2\2\u0126^\3\2\2\2\u0127\u0128\7/\2"+
		"\2\u0128\u0129\7/\2\2\u0129\u012a\7\'\2\2\u012a\u012b\7O\2\2\u012b\u012c"+
		"\7C\2\2\u012c\u012d\7K\2\2\u012d\u012e\7P\2\2\u012e`\3\2\2\2\u012f\u0130"+
		"\7@\2\2\u0130\u0131\7?\2\2\u0131b\3\2\2\2\u0132\u0133\7c\2\2\u0133\u0134"+
		"\7u\2\2\u0134\u0135\7u\2\2\u0135\u0136\7g\2\2\u0136\u0137\7t\2\2\u0137"+
		"\u0138\7v\2\2\u0138d\3\2\2\2\u0139\u013a\7t\2\2\u013a\u013b\7g\2\2\u013b"+
		"\u013c\7c\2\2\u013c\u013d\7n\2\2\u013df\3\2\2\2\u013e\u013f\5k\66\2\u013f"+
		"\u0140\7\60\2\2\u0140\u0141\5k\66\2\u0141h\3\2\2\2\u0142\u0143\7v\2\2"+
		"\u0143\u0144\7t\2\2\u0144\u0145\7w\2\2\u0145\u014c\7g\2\2\u0146\u0147"+
		"\7h\2\2\u0147\u0148\7c\2\2\u0148\u0149\7n\2\2\u0149\u014a\7u\2\2\u014a"+
		"\u014c\7g\2\2\u014b\u0142\3\2\2\2\u014b\u0146\3\2\2\2\u014cj\3\2\2\2\u014d"+
		"\u014f\t\2\2\2\u014e\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u014e\3\2"+
		"\2\2\u0150\u0151\3\2\2\2\u0151l\3\2\2\2\u0152\u0156\t\3\2\2\u0153\u0155"+
		"\t\4\2\2\u0154\u0153\3\2\2\2\u0155\u0158\3\2\2\2\u0156\u0154\3\2\2\2\u0156"+
		"\u0157\3\2\2\2\u0157n\3\2\2\2\u0158\u0156\3\2\2\2\u0159\u015b\t\5\2\2"+
		"\u015a\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d"+
		"\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u015f\b8\2\2\u015fp\3\2\2\2\u0160\u0161"+
		"\7/\2\2\u0161\u0162\7/\2\2\u0162\u016b\3\2\2\2\u0163\u0167\n\6\2\2\u0164"+
		"\u0166\n\7\2\2\u0165\u0164\3\2\2\2\u0166\u0169\3\2\2\2\u0167\u0165\3\2"+
		"\2\2\u0167\u0168\3\2\2\2\u0168\u016c\3\2\2\2\u0169\u0167\3\2\2\2\u016a"+
		"\u016c\3\2\2\2\u016b\u0163\3\2\2\2\u016b\u016a\3\2\2\2\u016c\u0171\3\2"+
		"\2\2\u016d\u016f\7\17\2\2\u016e\u016d\3\2\2\2\u016e\u016f\3\2\2\2\u016f"+
		"\u0170\3\2\2\2\u0170\u0172\7\f\2\2\u0171\u016e\3\2\2\2\u0171\u0172\3\2"+
		"\2\2\u0172\u0173\3\2\2\2\u0173\u0174\b9\2\2\u0174r\3\2\2\2\u0175\u0176"+
		"\7\61\2\2\u0176\u0177\7,\2\2\u0177\u017b\3\2\2\2\u0178\u017a\13\2\2\2"+
		"\u0179\u0178\3\2\2\2\u017a\u017d\3\2\2\2\u017b\u017c\3\2\2\2\u017b\u0179"+
		"\3\2\2\2\u017c\u017e\3\2\2\2\u017d\u017b\3\2\2\2\u017e\u017f\7,\2\2\u017f"+
		"\u0180\7\61\2\2\u0180\u0181\3\2\2\2\u0181\u0182\b:\2\2\u0182t\3\2\2\2"+
		"\u0183\u0184\13\2\2\2\u0184v\3\2\2\2\f\2\u014b\u0150\u0156\u015c\u0167"+
		"\u016b\u016e\u0171\u017b\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}