// Generated from Lustre.g4 by ANTLR 4.0
package jkind.lustre.parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LustreLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__44=1, T__43=2, T__42=3, T__41=4, T__40=5, T__39=6, T__38=7, T__37=8, 
		T__36=9, T__35=10, T__34=11, T__33=12, T__32=13, T__31=14, T__30=15, T__29=16, 
		T__28=17, T__27=18, T__26=19, T__25=20, T__24=21, T__23=22, T__22=23, 
		T__21=24, T__20=25, T__19=26, T__18=27, T__17=28, T__16=29, T__15=30, 
		T__14=31, T__13=32, T__12=33, T__11=34, T__10=35, T__9=36, T__8=37, T__7=38, 
		T__6=39, T__5=40, T__4=41, T__3=42, T__2=43, T__1=44, T__0=45, REAL=46, 
		BOOL=47, INT=48, ID=49, WS=50, SL_COMMENT=51, ML_COMMENT=52, MAIN=53, 
		ERROR=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'subrange'", "'of'", "','", "'-'", "'['", "'node'", "'*'", "'or'", 
		"':'", "'('", "'not'", "'if'", "'int'", "'<'", "'var'", "'<='", "'{'", 
		"'and'", "'let'", "'tel'", "'else'", "'}'", "'->'", "'xor'", "'bool'", 
		"')'", "'.'", "'pre'", "'=>'", "'+'", "'<>'", "'--%PROPERTY'", "'='", 
		"';'", "'div'", "'const'", "'>'", "'type'", "'then'", "'returns'", "'/'", 
		"'>='", "'assert'", "'real'", "REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", 
		"ML_COMMENT", "MAIN", "ERROR"
	};
	public static final String[] ruleNames = {
		"T__44", "T__43", "T__42", "T__41", "T__40", "T__39", "T__38", "T__37", 
		"T__36", "T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", 
		"T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", 
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0", "REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", 
		"ML_COMMENT", "MAIN", "ERROR"
	};


	public LustreLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lustre.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 49: WS_action((RuleContext)_localctx, actionIndex); break;

		case 50: SL_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 51: ML_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 52: MAIN_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void ML_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void MAIN_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void SL_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\48\u0169\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b"+
		"\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\22"+
		"\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\37\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3"+
		"\"\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3"+
		"(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3,\3,\3,\3-\3"+
		"-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\5\60\u0123\n\60\3\61\6\61\u0126\n\61\r\61\16\61\u0127"+
		"\3\62\3\62\7\62\u012c\n\62\f\62\16\62\u012f\13\62\3\63\6\63\u0132\n\63"+
		"\r\63\16\63\u0133\3\63\3\63\3\64\3\64\3\64\3\64\3\64\7\64\u013d\n\64\f"+
		"\64\16\64\u0140\13\64\3\64\5\64\u0143\n\64\3\64\5\64\u0146\n\64\3\64\5"+
		"\64\u0149\n\64\3\64\3\64\3\65\3\65\3\65\3\65\7\65\u0151\n\65\f\65\16\65"+
		"\u0154\13\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3"+
		"\66\3\66\3\66\5\66\u0164\n\66\3\66\3\66\3\67\3\67\3\u01528\3\3\1\5\4\1"+
		"\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1"+
		"\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31"+
		"\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%"+
		"\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\64"+
		"\2g\65\3i\66\4k\67\5m8\1\3\2\b\3\62;\5C\\aac|\6\62;C\\aac|\5\13\f\16\17"+
		"\"\"\5\f\f\17\17\'\'\4\f\f\17\17\u0172\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2"+
		"\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2"+
		"\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3"+
		"\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3"+
		"\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65"+
		"\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3"+
		"\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\3o\3\2\2\2\5q\3\2\2\2\7z\3\2\2"+
		"\2\t}\3\2\2\2\13\177\3\2\2\2\r\u0081\3\2\2\2\17\u0083\3\2\2\2\21\u0088"+
		"\3\2\2\2\23\u008a\3\2\2\2\25\u008d\3\2\2\2\27\u008f\3\2\2\2\31\u0091\3"+
		"\2\2\2\33\u0095\3\2\2\2\35\u0098\3\2\2\2\37\u009c\3\2\2\2!\u009e\3\2\2"+
		"\2#\u00a2\3\2\2\2%\u00a5\3\2\2\2\'\u00a7\3\2\2\2)\u00ab\3\2\2\2+\u00af"+
		"\3\2\2\2-\u00b3\3\2\2\2/\u00b8\3\2\2\2\61\u00ba\3\2\2\2\63\u00bd\3\2\2"+
		"\2\65\u00c1\3\2\2\2\67\u00c6\3\2\2\29\u00c8\3\2\2\2;\u00ca\3\2\2\2=\u00ce"+
		"\3\2\2\2?\u00d1\3\2\2\2A\u00d3\3\2\2\2C\u00d6\3\2\2\2E\u00e2\3\2\2\2G"+
		"\u00e4\3\2\2\2I\u00e6\3\2\2\2K\u00ea\3\2\2\2M\u00f0\3\2\2\2O\u00f2\3\2"+
		"\2\2Q\u00f7\3\2\2\2S\u00fc\3\2\2\2U\u0104\3\2\2\2W\u0106\3\2\2\2Y\u0109"+
		"\3\2\2\2[\u0110\3\2\2\2]\u0115\3\2\2\2_\u0122\3\2\2\2a\u0125\3\2\2\2c"+
		"\u0129\3\2\2\2e\u0131\3\2\2\2g\u0137\3\2\2\2i\u014c\3\2\2\2k\u015a\3\2"+
		"\2\2m\u0167\3\2\2\2op\7_\2\2p\4\3\2\2\2qr\7u\2\2rs\7w\2\2st\7d\2\2tu\7"+
		"t\2\2uv\7c\2\2vw\7p\2\2wx\7i\2\2xy\7g\2\2y\6\3\2\2\2z{\7q\2\2{|\7h\2\2"+
		"|\b\3\2\2\2}~\7.\2\2~\n\3\2\2\2\177\u0080\7/\2\2\u0080\f\3\2\2\2\u0081"+
		"\u0082\7]\2\2\u0082\16\3\2\2\2\u0083\u0084\7p\2\2\u0084\u0085\7q\2\2\u0085"+
		"\u0086\7f\2\2\u0086\u0087\7g\2\2\u0087\20\3\2\2\2\u0088\u0089\7,\2\2\u0089"+
		"\22\3\2\2\2\u008a\u008b\7q\2\2\u008b\u008c\7t\2\2\u008c\24\3\2\2\2\u008d"+
		"\u008e\7<\2\2\u008e\26\3\2\2\2\u008f\u0090\7*\2\2\u0090\30\3\2\2\2\u0091"+
		"\u0092\7p\2\2\u0092\u0093\7q\2\2\u0093\u0094\7v\2\2\u0094\32\3\2\2\2\u0095"+
		"\u0096\7k\2\2\u0096\u0097\7h\2\2\u0097\34\3\2\2\2\u0098\u0099\7k\2\2\u0099"+
		"\u009a\7p\2\2\u009a\u009b\7v\2\2\u009b\36\3\2\2\2\u009c\u009d\7>\2\2\u009d"+
		" \3\2\2\2\u009e\u009f\7x\2\2\u009f\u00a0\7c\2\2\u00a0\u00a1\7t\2\2\u00a1"+
		"\"\3\2\2\2\u00a2\u00a3\7>\2\2\u00a3\u00a4\7?\2\2\u00a4$\3\2\2\2\u00a5"+
		"\u00a6\7}\2\2\u00a6&\3\2\2\2\u00a7\u00a8\7c\2\2\u00a8\u00a9\7p\2\2\u00a9"+
		"\u00aa\7f\2\2\u00aa(\3\2\2\2\u00ab\u00ac\7n\2\2\u00ac\u00ad\7g\2\2\u00ad"+
		"\u00ae\7v\2\2\u00ae*\3\2\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1\7g\2\2\u00b1"+
		"\u00b2\7n\2\2\u00b2,\3\2\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7n\2\2\u00b5"+
		"\u00b6\7u\2\2\u00b6\u00b7\7g\2\2\u00b7.\3\2\2\2\u00b8\u00b9\7\177\2\2"+
		"\u00b9\60\3\2\2\2\u00ba\u00bb\7/\2\2\u00bb\u00bc\7@\2\2\u00bc\62\3\2\2"+
		"\2\u00bd\u00be\7z\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7t\2\2\u00c0\64\3"+
		"\2\2\2\u00c1\u00c2\7d\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4\7q\2\2\u00c4"+
		"\u00c5\7n\2\2\u00c5\66\3\2\2\2\u00c6\u00c7\7+\2\2\u00c78\3\2\2\2\u00c8"+
		"\u00c9\7\60\2\2\u00c9:\3\2\2\2\u00ca\u00cb\7r\2\2\u00cb\u00cc\7t\2\2\u00cc"+
		"\u00cd\7g\2\2\u00cd<\3\2\2\2\u00ce\u00cf\7?\2\2\u00cf\u00d0\7@\2\2\u00d0"+
		">\3\2\2\2\u00d1\u00d2\7-\2\2\u00d2@\3\2\2\2\u00d3\u00d4\7>\2\2\u00d4\u00d5"+
		"\7@\2\2\u00d5B\3\2\2\2\u00d6\u00d7\7/\2\2\u00d7\u00d8\7/\2\2\u00d8\u00d9"+
		"\7\'\2\2\u00d9\u00da\7R\2\2\u00da\u00db\7T\2\2\u00db\u00dc\7Q\2\2\u00dc"+
		"\u00dd\7R\2\2\u00dd\u00de\7G\2\2\u00de\u00df\7T\2\2\u00df\u00e0\7V\2\2"+
		"\u00e0\u00e1\7[\2\2\u00e1D\3\2\2\2\u00e2\u00e3\7?\2\2\u00e3F\3\2\2\2\u00e4"+
		"\u00e5\7=\2\2\u00e5H\3\2\2\2\u00e6\u00e7\7f\2\2\u00e7\u00e8\7k\2\2\u00e8"+
		"\u00e9\7x\2\2\u00e9J\3\2\2\2\u00ea\u00eb\7e\2\2\u00eb\u00ec\7q\2\2\u00ec"+
		"\u00ed\7p\2\2\u00ed\u00ee\7u\2\2\u00ee\u00ef\7v\2\2\u00efL\3\2\2\2\u00f0"+
		"\u00f1\7@\2\2\u00f1N\3\2\2\2\u00f2\u00f3\7v\2\2\u00f3\u00f4\7{\2\2\u00f4"+
		"\u00f5\7r\2\2\u00f5\u00f6\7g\2\2\u00f6P\3\2\2\2\u00f7\u00f8\7v\2\2\u00f8"+
		"\u00f9\7j\2\2\u00f9\u00fa\7g\2\2\u00fa\u00fb\7p\2\2\u00fbR\3\2\2\2\u00fc"+
		"\u00fd\7t\2\2\u00fd\u00fe\7g\2\2\u00fe\u00ff\7v\2\2\u00ff\u0100\7w\2\2"+
		"\u0100\u0101\7t\2\2\u0101\u0102\7p\2\2\u0102\u0103\7u\2\2\u0103T\3\2\2"+
		"\2\u0104\u0105\7\61\2\2\u0105V\3\2\2\2\u0106\u0107\7@\2\2\u0107\u0108"+
		"\7?\2\2\u0108X\3\2\2\2\u0109\u010a\7c\2\2\u010a\u010b\7u\2\2\u010b\u010c"+
		"\7u\2\2\u010c\u010d\7g\2\2\u010d\u010e\7t\2\2\u010e\u010f\7v\2\2\u010f"+
		"Z\3\2\2\2\u0110\u0111\7t\2\2\u0111\u0112\7g\2\2\u0112\u0113\7c\2\2\u0113"+
		"\u0114\7n\2\2\u0114\\\3\2\2\2\u0115\u0116\5a\61\2\u0116\u0117\7\60\2\2"+
		"\u0117\u0118\5a\61\2\u0118^\3\2\2\2\u0119\u011a\7v\2\2\u011a\u011b\7t"+
		"\2\2\u011b\u011c\7w\2\2\u011c\u0123\7g\2\2\u011d\u011e\7h\2\2\u011e\u011f"+
		"\7c\2\2\u011f\u0120\7n\2\2\u0120\u0121\7u\2\2\u0121\u0123\7g\2\2\u0122"+
		"\u0119\3\2\2\2\u0122\u011d\3\2\2\2\u0123`\3\2\2\2\u0124\u0126\t\2\2\2"+
		"\u0125\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0125\3\2\2\2\u0127\u0128"+
		"\3\2\2\2\u0128b\3\2\2\2\u0129\u012d\t\3\2\2\u012a\u012c\t\4\2\2\u012b"+
		"\u012a\3\2\2\2\u012c\u012f\3\2\2\2\u012d\u012b\3\2\2\2\u012d\u012e\3\2"+
		"\2\2\u012ed\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u0132\t\5\2\2\u0131\u0130"+
		"\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134"+
		"\u0135\3\2\2\2\u0135\u0136\b\63\2\2\u0136f\3\2\2\2\u0137\u0138\7/\2\2"+
		"\u0138\u0139\7/\2\2\u0139\u0142\3\2\2\2\u013a\u013e\n\6\2\2\u013b\u013d"+
		"\n\7\2\2\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e\u013c\3\2\2\2\u013e"+
		"\u013f\3\2\2\2\u013f\u0143\3\2\2\2\u0140\u013e\3\2\2\2\u0141\u0143\3\2"+
		"\2\2\u0142\u013a\3\2\2\2\u0142\u0141\3\2\2\2\u0143\u0148\3\2\2\2\u0144"+
		"\u0146\7\17\2\2\u0145\u0144\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0147\3"+
		"\2\2\2\u0147\u0149\7\f\2\2\u0148\u0145\3\2\2\2\u0148\u0149\3\2\2\2\u0149"+
		"\u014a\3\2\2\2\u014a\u014b\b\64\3\2\u014bh\3\2\2\2\u014c\u014d\7\61\2"+
		"\2\u014d\u014e\7,\2\2\u014e\u0152\3\2\2\2\u014f\u0151\13\2\2\2\u0150\u014f"+
		"\3\2\2\2\u0151\u0154\3\2\2\2\u0152\u0153\3\2\2\2\u0152\u0150\3\2\2\2\u0153"+
		"\u0155\3\2\2\2\u0154\u0152\3\2\2\2\u0155\u0156\7,\2\2\u0156\u0157\7\61"+
		"\2\2\u0157\u0158\3\2\2\2\u0158\u0159\b\65\4\2\u0159j\3\2\2\2\u015a\u015b"+
		"\7/\2\2\u015b\u015c\7/\2\2\u015c\u015d\7\'\2\2\u015d\u015e\7O\2\2\u015e"+
		"\u015f\7C\2\2\u015f\u0160\7K\2\2\u0160\u0161\7P\2\2\u0161\u0163\3\2\2"+
		"\2\u0162\u0164\7=\2\2\u0163\u0162\3\2\2\2\u0163\u0164\3\2\2\2\u0164\u0165"+
		"\3\2\2\2\u0165\u0166\b\66\5\2\u0166l\3\2\2\2\u0167\u0168\13\2\2\2\u0168"+
		"n\3\2\2\2\r\2\u0122\u0127\u012d\u0133\u013e\u0142\u0145\u0148\u0152\u0163";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}