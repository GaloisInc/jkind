// Generated from Lustre.g4 by ANTLR 4.2
package jkind.lustre.parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LustreLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__48=1, T__47=2, T__46=3, T__45=4, T__44=5, T__43=6, T__42=7, T__41=8, 
		T__40=9, T__39=10, T__38=11, T__37=12, T__36=13, T__35=14, T__34=15, T__33=16, 
		T__32=17, T__31=18, T__30=19, T__29=20, T__28=21, T__27=22, T__26=23, 
		T__25=24, T__24=25, T__23=26, T__22=27, T__21=28, T__20=29, T__19=30, 
		T__18=31, T__17=32, T__16=33, T__15=34, T__14=35, T__13=36, T__12=37, 
		T__11=38, T__10=39, T__9=40, T__8=41, T__7=42, T__6=43, T__5=44, T__4=45, 
		T__3=46, T__2=47, T__1=48, T__0=49, REAL=50, BOOL=51, INT=52, ID=53, WS=54, 
		SL_COMMENT=55, ML_COMMENT=56, ERROR=57;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'subrange'", "'of'", "','", "'-'", "'['", "'node'", "'*'", "'or'", 
		"':'", "'('", "'not'", "'if'", "'int'", "'<'", "'var'", "'<='", "'{'", 
		"'and'", "'let'", "'condact'", "'tel'", "'else'", "'}'", "'struct'", "'->'", 
		"'xor'", "'bool'", "')'", "'.'", "'pre'", "'=>'", "'+'", "'<>'", "'='", 
		"'--%PROPERTY'", "';'", "'div'", "'const'", "'>'", "'type'", "'mod'", 
		"'then'", "'returns'", "'/'", "'--%MAIN'", "'>='", "'assert'", "'real'", 
		"REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", "ML_COMMENT", "ERROR"
	};
	public static final String[] ruleNames = {
		"T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42", "T__41", 
		"T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", "T__33", 
		"T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", "T__25", 
		"T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", 
		"T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", 
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", "ML_COMMENT", "ERROR"
	};


	public LustreLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lustre.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2;\u017d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b"+
		"\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22"+
		"\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3"+
		"!\3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&"+
		"\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3"+
		"+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3/\3/\3/\3/\3/\3/\3/\3"+
		"/\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62"+
		"\3\62\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64"+
		"\5\64\u0144\n\64\3\65\6\65\u0147\n\65\r\65\16\65\u0148\3\66\3\66\7\66"+
		"\u014d\n\66\f\66\16\66\u0150\13\66\3\67\6\67\u0153\n\67\r\67\16\67\u0154"+
		"\3\67\3\67\38\38\38\38\38\78\u015e\n8\f8\168\u0161\138\38\58\u0164\n8"+
		"\38\58\u0167\n8\38\58\u016a\n8\38\38\39\39\39\39\79\u0172\n9\f9\169\u0175"+
		"\139\39\39\39\39\39\3:\3:\3\u0173\2;\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21"+
		"\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
		"/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;\3\2\b\3\2\62;\5\2C\\aac|\6\2"+
		"\62;C\\aac|\5\2\13\f\16\17\"\"\5\2\f\f\17\17\'\'\4\2\f\f\17\17\u0185\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5w\3\2\2\2\7\u0080\3\2\2"+
		"\2\t\u0083\3\2\2\2\13\u0085\3\2\2\2\r\u0087\3\2\2\2\17\u0089\3\2\2\2\21"+
		"\u008e\3\2\2\2\23\u0090\3\2\2\2\25\u0093\3\2\2\2\27\u0095\3\2\2\2\31\u0097"+
		"\3\2\2\2\33\u009b\3\2\2\2\35\u009e\3\2\2\2\37\u00a2\3\2\2\2!\u00a4\3\2"+
		"\2\2#\u00a8\3\2\2\2%\u00ab\3\2\2\2\'\u00ad\3\2\2\2)\u00b1\3\2\2\2+\u00b5"+
		"\3\2\2\2-\u00bd\3\2\2\2/\u00c1\3\2\2\2\61\u00c6\3\2\2\2\63\u00c8\3\2\2"+
		"\2\65\u00cf\3\2\2\2\67\u00d2\3\2\2\29\u00d6\3\2\2\2;\u00db\3\2\2\2=\u00dd"+
		"\3\2\2\2?\u00df\3\2\2\2A\u00e3\3\2\2\2C\u00e6\3\2\2\2E\u00e8\3\2\2\2G"+
		"\u00eb\3\2\2\2I\u00ed\3\2\2\2K\u00f9\3\2\2\2M\u00fb\3\2\2\2O\u00ff\3\2"+
		"\2\2Q\u0105\3\2\2\2S\u0107\3\2\2\2U\u010c\3\2\2\2W\u0110\3\2\2\2Y\u0115"+
		"\3\2\2\2[\u011d\3\2\2\2]\u011f\3\2\2\2_\u0127\3\2\2\2a\u012a\3\2\2\2c"+
		"\u0131\3\2\2\2e\u0136\3\2\2\2g\u0143\3\2\2\2i\u0146\3\2\2\2k\u014a\3\2"+
		"\2\2m\u0152\3\2\2\2o\u0158\3\2\2\2q\u016d\3\2\2\2s\u017b\3\2\2\2uv\7_"+
		"\2\2v\4\3\2\2\2wx\7u\2\2xy\7w\2\2yz\7d\2\2z{\7t\2\2{|\7c\2\2|}\7p\2\2"+
		"}~\7i\2\2~\177\7g\2\2\177\6\3\2\2\2\u0080\u0081\7q\2\2\u0081\u0082\7h"+
		"\2\2\u0082\b\3\2\2\2\u0083\u0084\7.\2\2\u0084\n\3\2\2\2\u0085\u0086\7"+
		"/\2\2\u0086\f\3\2\2\2\u0087\u0088\7]\2\2\u0088\16\3\2\2\2\u0089\u008a"+
		"\7p\2\2\u008a\u008b\7q\2\2\u008b\u008c\7f\2\2\u008c\u008d\7g\2\2\u008d"+
		"\20\3\2\2\2\u008e\u008f\7,\2\2\u008f\22\3\2\2\2\u0090\u0091\7q\2\2\u0091"+
		"\u0092\7t\2\2\u0092\24\3\2\2\2\u0093\u0094\7<\2\2\u0094\26\3\2\2\2\u0095"+
		"\u0096\7*\2\2\u0096\30\3\2\2\2\u0097\u0098\7p\2\2\u0098\u0099\7q\2\2\u0099"+
		"\u009a\7v\2\2\u009a\32\3\2\2\2\u009b\u009c\7k\2\2\u009c\u009d\7h\2\2\u009d"+
		"\34\3\2\2\2\u009e\u009f\7k\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7v\2\2\u00a1"+
		"\36\3\2\2\2\u00a2\u00a3\7>\2\2\u00a3 \3\2\2\2\u00a4\u00a5\7x\2\2\u00a5"+
		"\u00a6\7c\2\2\u00a6\u00a7\7t\2\2\u00a7\"\3\2\2\2\u00a8\u00a9\7>\2\2\u00a9"+
		"\u00aa\7?\2\2\u00aa$\3\2\2\2\u00ab\u00ac\7}\2\2\u00ac&\3\2\2\2\u00ad\u00ae"+
		"\7c\2\2\u00ae\u00af\7p\2\2\u00af\u00b0\7f\2\2\u00b0(\3\2\2\2\u00b1\u00b2"+
		"\7n\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7v\2\2\u00b4*\3\2\2\2\u00b5\u00b6"+
		"\7e\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9\7f\2\2\u00b9"+
		"\u00ba\7c\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7v\2\2\u00bc,\3\2\2\2\u00bd"+
		"\u00be\7v\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0\7n\2\2\u00c0.\3\2\2\2\u00c1"+
		"\u00c2\7g\2\2\u00c2\u00c3\7n\2\2\u00c3\u00c4\7u\2\2\u00c4\u00c5\7g\2\2"+
		"\u00c5\60\3\2\2\2\u00c6\u00c7\7\177\2\2\u00c7\62\3\2\2\2\u00c8\u00c9\7"+
		"u\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7w\2\2\u00cc\u00cd"+
		"\7e\2\2\u00cd\u00ce\7v\2\2\u00ce\64\3\2\2\2\u00cf\u00d0\7/\2\2\u00d0\u00d1"+
		"\7@\2\2\u00d1\66\3\2\2\2\u00d2\u00d3\7z\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5"+
		"\7t\2\2\u00d58\3\2\2\2\u00d6\u00d7\7d\2\2\u00d7\u00d8\7q\2\2\u00d8\u00d9"+
		"\7q\2\2\u00d9\u00da\7n\2\2\u00da:\3\2\2\2\u00db\u00dc\7+\2\2\u00dc<\3"+
		"\2\2\2\u00dd\u00de\7\60\2\2\u00de>\3\2\2\2\u00df\u00e0\7r\2\2\u00e0\u00e1"+
		"\7t\2\2\u00e1\u00e2\7g\2\2\u00e2@\3\2\2\2\u00e3\u00e4\7?\2\2\u00e4\u00e5"+
		"\7@\2\2\u00e5B\3\2\2\2\u00e6\u00e7\7-\2\2\u00e7D\3\2\2\2\u00e8\u00e9\7"+
		">\2\2\u00e9\u00ea\7@\2\2\u00eaF\3\2\2\2\u00eb\u00ec\7?\2\2\u00ecH\3\2"+
		"\2\2\u00ed\u00ee\7/\2\2\u00ee\u00ef\7/\2\2\u00ef\u00f0\7\'\2\2\u00f0\u00f1"+
		"\7R\2\2\u00f1\u00f2\7T\2\2\u00f2\u00f3\7Q\2\2\u00f3\u00f4\7R\2\2\u00f4"+
		"\u00f5\7G\2\2\u00f5\u00f6\7T\2\2\u00f6\u00f7\7V\2\2\u00f7\u00f8\7[\2\2"+
		"\u00f8J\3\2\2\2\u00f9\u00fa\7=\2\2\u00faL\3\2\2\2\u00fb\u00fc\7f\2\2\u00fc"+
		"\u00fd\7k\2\2\u00fd\u00fe\7x\2\2\u00feN\3\2\2\2\u00ff\u0100\7e\2\2\u0100"+
		"\u0101\7q\2\2\u0101\u0102\7p\2\2\u0102\u0103\7u\2\2\u0103\u0104\7v\2\2"+
		"\u0104P\3\2\2\2\u0105\u0106\7@\2\2\u0106R\3\2\2\2\u0107\u0108\7v\2\2\u0108"+
		"\u0109\7{\2\2\u0109\u010a\7r\2\2\u010a\u010b\7g\2\2\u010bT\3\2\2\2\u010c"+
		"\u010d\7o\2\2\u010d\u010e\7q\2\2\u010e\u010f\7f\2\2\u010fV\3\2\2\2\u0110"+
		"\u0111\7v\2\2\u0111\u0112\7j\2\2\u0112\u0113\7g\2\2\u0113\u0114\7p\2\2"+
		"\u0114X\3\2\2\2\u0115\u0116\7t\2\2\u0116\u0117\7g\2\2\u0117\u0118\7v\2"+
		"\2\u0118\u0119\7w\2\2\u0119\u011a\7t\2\2\u011a\u011b\7p\2\2\u011b\u011c"+
		"\7u\2\2\u011cZ\3\2\2\2\u011d\u011e\7\61\2\2\u011e\\\3\2\2\2\u011f\u0120"+
		"\7/\2\2\u0120\u0121\7/\2\2\u0121\u0122\7\'\2\2\u0122\u0123\7O\2\2\u0123"+
		"\u0124\7C\2\2\u0124\u0125\7K\2\2\u0125\u0126\7P\2\2\u0126^\3\2\2\2\u0127"+
		"\u0128\7@\2\2\u0128\u0129\7?\2\2\u0129`\3\2\2\2\u012a\u012b\7c\2\2\u012b"+
		"\u012c\7u\2\2\u012c\u012d\7u\2\2\u012d\u012e\7g\2\2\u012e\u012f\7t\2\2"+
		"\u012f\u0130\7v\2\2\u0130b\3\2\2\2\u0131\u0132\7t\2\2\u0132\u0133\7g\2"+
		"\2\u0133\u0134\7c\2\2\u0134\u0135\7n\2\2\u0135d\3\2\2\2\u0136\u0137\5"+
		"i\65\2\u0137\u0138\7\60\2\2\u0138\u0139\5i\65\2\u0139f\3\2\2\2\u013a\u013b"+
		"\7v\2\2\u013b\u013c\7t\2\2\u013c\u013d\7w\2\2\u013d\u0144\7g\2\2\u013e"+
		"\u013f\7h\2\2\u013f\u0140\7c\2\2\u0140\u0141\7n\2\2\u0141\u0142\7u\2\2"+
		"\u0142\u0144\7g\2\2\u0143\u013a\3\2\2\2\u0143\u013e\3\2\2\2\u0144h\3\2"+
		"\2\2\u0145\u0147\t\2\2\2\u0146\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148"+
		"\u0146\3\2\2\2\u0148\u0149\3\2\2\2\u0149j\3\2\2\2\u014a\u014e\t\3\2\2"+
		"\u014b\u014d\t\4\2\2\u014c\u014b\3\2\2\2\u014d\u0150\3\2\2\2\u014e\u014c"+
		"\3\2\2\2\u014e\u014f\3\2\2\2\u014fl\3\2\2\2\u0150\u014e\3\2\2\2\u0151"+
		"\u0153\t\5\2\2\u0152\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0152\3\2"+
		"\2\2\u0154\u0155\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0157\b\67\2\2\u0157"+
		"n\3\2\2\2\u0158\u0159\7/\2\2\u0159\u015a\7/\2\2\u015a\u0163\3\2\2\2\u015b"+
		"\u015f\n\6\2\2\u015c\u015e\n\7\2\2\u015d\u015c\3\2\2\2\u015e\u0161\3\2"+
		"\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0164\3\2\2\2\u0161"+
		"\u015f\3\2\2\2\u0162\u0164\3\2\2\2\u0163\u015b\3\2\2\2\u0163\u0162\3\2"+
		"\2\2\u0164\u0169\3\2\2\2\u0165\u0167\7\17\2\2\u0166\u0165\3\2\2\2\u0166"+
		"\u0167\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u016a\7\f\2\2\u0169\u0166\3\2"+
		"\2\2\u0169\u016a\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u016c\b8\2\2\u016c"+
		"p\3\2\2\2\u016d\u016e\7\61\2\2\u016e\u016f\7,\2\2\u016f\u0173\3\2\2\2"+
		"\u0170\u0172\13\2\2\2\u0171\u0170\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0174"+
		"\3\2\2\2\u0173\u0171\3\2\2\2\u0174\u0176\3\2\2\2\u0175\u0173\3\2\2\2\u0176"+
		"\u0177\7,\2\2\u0177\u0178\7\61\2\2\u0178\u0179\3\2\2\2\u0179\u017a\b9"+
		"\2\2\u017ar\3\2\2\2\u017b\u017c\13\2\2\2\u017ct\3\2\2\2\f\2\u0143\u0148"+
		"\u014e\u0154\u015f\u0163\u0166\u0169\u0173\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}