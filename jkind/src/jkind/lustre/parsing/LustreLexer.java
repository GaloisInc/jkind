// Generated from Lustre.g4 by ANTLR 4.0
package jkind.lustre.parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LustreLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__41=1, T__40=2, T__39=3, T__38=4, T__37=5, T__36=6, T__35=7, T__34=8, 
		T__33=9, T__32=10, T__31=11, T__30=12, T__29=13, T__28=14, T__27=15, T__26=16, 
		T__25=17, T__24=18, T__23=19, T__22=20, T__21=21, T__20=22, T__19=23, 
		T__18=24, T__17=25, T__16=26, T__15=27, T__14=28, T__13=29, T__12=30, 
		T__11=31, T__10=32, T__9=33, T__8=34, T__7=35, T__6=36, T__5=37, T__4=38, 
		T__3=39, T__2=40, T__1=41, T__0=42, REAL=43, BOOL=44, INT=45, ID=46, WS=47, 
		SL_COMMENT=48, ML_COMMENT=49, MAIN=50, ERROR=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'subrange'", "'of'", "','", "'-'", "'['", "'node'", "'*'", "'or'", 
		"'not'", "':'", "'('", "'if'", "'int'", "'<'", "'var'", "'<='", "'and'", 
		"'let'", "'tel'", "'else'", "'->'", "'xor'", "'pre'", "'bool'", "')'", 
		"'=>'", "'+'", "'<>'", "'--%PROPERTY'", "'='", "';'", "'div'", "'const'", 
		"'>'", "'type'", "'then'", "'returns'", "'/'", "'>='", "'assert'", "'real'", 
		"REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", "ML_COMMENT", "MAIN", 
		"ERROR"
	};
	public static final String[] ruleNames = {
		"T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", 
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "REAL", "BOOL", "INT", "ID", "WS", "SL_COMMENT", "ML_COMMENT", 
		"MAIN", "ERROR"
	};


	public LustreLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lustre.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 46: WS_action((RuleContext)_localctx, actionIndex); break;

		case 47: SL_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 48: ML_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 49: MAIN_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void ML_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void MAIN_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void SL_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4\65\u015d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b"+
		"\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3"+
		"\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3"+
		"\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3"+
		"\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3"+
		"\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3"+
		"\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3"+
		"+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u0117\n-\3.\6.\u011a\n"+
		".\r.\16.\u011b\3/\3/\7/\u0120\n/\f/\16/\u0123\13/\3\60\6\60\u0126\n\60"+
		"\r\60\16\60\u0127\3\60\3\60\3\61\3\61\3\61\3\61\3\61\7\61\u0131\n\61\f"+
		"\61\16\61\u0134\13\61\3\61\5\61\u0137\n\61\3\61\5\61\u013a\n\61\3\61\5"+
		"\61\u013d\n\61\3\61\3\61\3\62\3\62\3\62\3\62\7\62\u0145\n\62\f\62\16\62"+
		"\u0148\13\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3"+
		"\63\3\63\3\63\5\63\u0158\n\63\3\63\3\63\3\64\3\64\3\u0146\65\3\3\1\5\4"+
		"\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16"+
		"\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1"+
		"/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$"+
		"\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\2a\62\3c\63"+
		"\4e\64\5g\65\1\3\2\b\3\62;\5C\\aac|\6\62;C\\aac|\5\13\f\16\17\"\"\5\f"+
		"\f\17\17\'\'\4\f\f\17\17\u0166\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t"+
		"\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2"+
		"\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2"+
		"\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2"+
		"+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2"+
		"\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2"+
		"C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3"+
		"\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2"+
		"\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\3"+
		"i\3\2\2\2\5k\3\2\2\2\7t\3\2\2\2\tw\3\2\2\2\13y\3\2\2\2\r{\3\2\2\2\17}"+
		"\3\2\2\2\21\u0082\3\2\2\2\23\u0084\3\2\2\2\25\u0087\3\2\2\2\27\u008b\3"+
		"\2\2\2\31\u008d\3\2\2\2\33\u008f\3\2\2\2\35\u0092\3\2\2\2\37\u0096\3\2"+
		"\2\2!\u0098\3\2\2\2#\u009c\3\2\2\2%\u009f\3\2\2\2\'\u00a3\3\2\2\2)\u00a7"+
		"\3\2\2\2+\u00ab\3\2\2\2-\u00b0\3\2\2\2/\u00b3\3\2\2\2\61\u00b7\3\2\2\2"+
		"\63\u00bb\3\2\2\2\65\u00c0\3\2\2\2\67\u00c2\3\2\2\29\u00c5\3\2\2\2;\u00c7"+
		"\3\2\2\2=\u00ca\3\2\2\2?\u00d6\3\2\2\2A\u00d8\3\2\2\2C\u00da\3\2\2\2E"+
		"\u00de\3\2\2\2G\u00e4\3\2\2\2I\u00e6\3\2\2\2K\u00eb\3\2\2\2M\u00f0\3\2"+
		"\2\2O\u00f8\3\2\2\2Q\u00fa\3\2\2\2S\u00fd\3\2\2\2U\u0104\3\2\2\2W\u0109"+
		"\3\2\2\2Y\u0116\3\2\2\2[\u0119\3\2\2\2]\u011d\3\2\2\2_\u0125\3\2\2\2a"+
		"\u012b\3\2\2\2c\u0140\3\2\2\2e\u014e\3\2\2\2g\u015b\3\2\2\2ij\7_\2\2j"+
		"\4\3\2\2\2kl\7u\2\2lm\7w\2\2mn\7d\2\2no\7t\2\2op\7c\2\2pq\7p\2\2qr\7i"+
		"\2\2rs\7g\2\2s\6\3\2\2\2tu\7q\2\2uv\7h\2\2v\b\3\2\2\2wx\7.\2\2x\n\3\2"+
		"\2\2yz\7/\2\2z\f\3\2\2\2{|\7]\2\2|\16\3\2\2\2}~\7p\2\2~\177\7q\2\2\177"+
		"\u0080\7f\2\2\u0080\u0081\7g\2\2\u0081\20\3\2\2\2\u0082\u0083\7,\2\2\u0083"+
		"\22\3\2\2\2\u0084\u0085\7q\2\2\u0085\u0086\7t\2\2\u0086\24\3\2\2\2\u0087"+
		"\u0088\7p\2\2\u0088\u0089\7q\2\2\u0089\u008a\7v\2\2\u008a\26\3\2\2\2\u008b"+
		"\u008c\7<\2\2\u008c\30\3\2\2\2\u008d\u008e\7*\2\2\u008e\32\3\2\2\2\u008f"+
		"\u0090\7k\2\2\u0090\u0091\7h\2\2\u0091\34\3\2\2\2\u0092\u0093\7k\2\2\u0093"+
		"\u0094\7p\2\2\u0094\u0095\7v\2\2\u0095\36\3\2\2\2\u0096\u0097\7>\2\2\u0097"+
		" \3\2\2\2\u0098\u0099\7x\2\2\u0099\u009a\7c\2\2\u009a\u009b\7t\2\2\u009b"+
		"\"\3\2\2\2\u009c\u009d\7>\2\2\u009d\u009e\7?\2\2\u009e$\3\2\2\2\u009f"+
		"\u00a0\7c\2\2\u00a0\u00a1\7p\2\2\u00a1\u00a2\7f\2\2\u00a2&\3\2\2\2\u00a3"+
		"\u00a4\7n\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7v\2\2\u00a6(\3\2\2\2\u00a7"+
		"\u00a8\7v\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7n\2\2\u00aa*\3\2\2\2\u00ab"+
		"\u00ac\7g\2\2\u00ac\u00ad\7n\2\2\u00ad\u00ae\7u\2\2\u00ae\u00af\7g\2\2"+
		"\u00af,\3\2\2\2\u00b0\u00b1\7/\2\2\u00b1\u00b2\7@\2\2\u00b2.\3\2\2\2\u00b3"+
		"\u00b4\7z\2\2\u00b4\u00b5\7q\2\2\u00b5\u00b6\7t\2\2\u00b6\60\3\2\2\2\u00b7"+
		"\u00b8\7r\2\2\u00b8\u00b9\7t\2\2\u00b9\u00ba\7g\2\2\u00ba\62\3\2\2\2\u00bb"+
		"\u00bc\7d\2\2\u00bc\u00bd\7q\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7n\2\2"+
		"\u00bf\64\3\2\2\2\u00c0\u00c1\7+\2\2\u00c1\66\3\2\2\2\u00c2\u00c3\7?\2"+
		"\2\u00c3\u00c4\7@\2\2\u00c48\3\2\2\2\u00c5\u00c6\7-\2\2\u00c6:\3\2\2\2"+
		"\u00c7\u00c8\7>\2\2\u00c8\u00c9\7@\2\2\u00c9<\3\2\2\2\u00ca\u00cb\7/\2"+
		"\2\u00cb\u00cc\7/\2\2\u00cc\u00cd\7\'\2\2\u00cd\u00ce\7R\2\2\u00ce\u00cf"+
		"\7T\2\2\u00cf\u00d0\7Q\2\2\u00d0\u00d1\7R\2\2\u00d1\u00d2\7G\2\2\u00d2"+
		"\u00d3\7T\2\2\u00d3\u00d4\7V\2\2\u00d4\u00d5\7[\2\2\u00d5>\3\2\2\2\u00d6"+
		"\u00d7\7?\2\2\u00d7@\3\2\2\2\u00d8\u00d9\7=\2\2\u00d9B\3\2\2\2\u00da\u00db"+
		"\7f\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7x\2\2\u00ddD\3\2\2\2\u00de\u00df"+
		"\7e\2\2\u00df\u00e0\7q\2\2\u00e0\u00e1\7p\2\2\u00e1\u00e2\7u\2\2\u00e2"+
		"\u00e3\7v\2\2\u00e3F\3\2\2\2\u00e4\u00e5\7@\2\2\u00e5H\3\2\2\2\u00e6\u00e7"+
		"\7v\2\2\u00e7\u00e8\7{\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7g\2\2\u00ea"+
		"J\3\2\2\2\u00eb\u00ec\7v\2\2\u00ec\u00ed\7j\2\2\u00ed\u00ee\7g\2\2\u00ee"+
		"\u00ef\7p\2\2\u00efL\3\2\2\2\u00f0\u00f1\7t\2\2\u00f1\u00f2\7g\2\2\u00f2"+
		"\u00f3\7v\2\2\u00f3\u00f4\7w\2\2\u00f4\u00f5\7t\2\2\u00f5\u00f6\7p\2\2"+
		"\u00f6\u00f7\7u\2\2\u00f7N\3\2\2\2\u00f8\u00f9\7\61\2\2\u00f9P\3\2\2\2"+
		"\u00fa\u00fb\7@\2\2\u00fb\u00fc\7?\2\2\u00fcR\3\2\2\2\u00fd\u00fe\7c\2"+
		"\2\u00fe\u00ff\7u\2\2\u00ff\u0100\7u\2\2\u0100\u0101\7g\2\2\u0101\u0102"+
		"\7t\2\2\u0102\u0103\7v\2\2\u0103T\3\2\2\2\u0104\u0105\7t\2\2\u0105\u0106"+
		"\7g\2\2\u0106\u0107\7c\2\2\u0107\u0108\7n\2\2\u0108V\3\2\2\2\u0109\u010a"+
		"\5[.\2\u010a\u010b\7\60\2\2\u010b\u010c\5[.\2\u010cX\3\2\2\2\u010d\u010e"+
		"\7v\2\2\u010e\u010f\7t\2\2\u010f\u0110\7w\2\2\u0110\u0117\7g\2\2\u0111"+
		"\u0112\7h\2\2\u0112\u0113\7c\2\2\u0113\u0114\7n\2\2\u0114\u0115\7u\2\2"+
		"\u0115\u0117\7g\2\2\u0116\u010d\3\2\2\2\u0116\u0111\3\2\2\2\u0117Z\3\2"+
		"\2\2\u0118\u011a\t\2\2\2\u0119\u0118\3\2\2\2\u011a\u011b\3\2\2\2\u011b"+
		"\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011c\\\3\2\2\2\u011d\u0121\t\3\2\2"+
		"\u011e\u0120\t\4\2\2\u011f\u011e\3\2\2\2\u0120\u0123\3\2\2\2\u0121\u011f"+
		"\3\2\2\2\u0121\u0122\3\2\2\2\u0122^\3\2\2\2\u0123\u0121\3\2\2\2\u0124"+
		"\u0126\t\5\2\2\u0125\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0125\3\2"+
		"\2\2\u0127\u0128\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012a\b\60\2\2\u012a"+
		"`\3\2\2\2\u012b\u012c\7/\2\2\u012c\u012d\7/\2\2\u012d\u0136\3\2\2\2\u012e"+
		"\u0132\n\6\2\2\u012f\u0131\n\7\2\2\u0130\u012f\3\2\2\2\u0131\u0134\3\2"+
		"\2\2\u0132\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0137\3\2\2\2\u0134"+
		"\u0132\3\2\2\2\u0135\u0137\3\2\2\2\u0136\u012e\3\2\2\2\u0136\u0135\3\2"+
		"\2\2\u0137\u013c\3\2\2\2\u0138\u013a\7\17\2\2\u0139\u0138\3\2\2\2\u0139"+
		"\u013a\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013d\7\f\2\2\u013c\u0139\3\2"+
		"\2\2\u013c\u013d\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013f\b\61\3\2\u013f"+
		"b\3\2\2\2\u0140\u0141\7\61\2\2\u0141\u0142\7,\2\2\u0142\u0146\3\2\2\2"+
		"\u0143\u0145\13\2\2\2\u0144\u0143\3\2\2\2\u0145\u0148\3\2\2\2\u0146\u0147"+
		"\3\2\2\2\u0146\u0144\3\2\2\2\u0147\u0149\3\2\2\2\u0148\u0146\3\2\2\2\u0149"+
		"\u014a\7,\2\2\u014a\u014b\7\61\2\2\u014b\u014c\3\2\2\2\u014c\u014d\b\62"+
		"\4\2\u014dd\3\2\2\2\u014e\u014f\7/\2\2\u014f\u0150\7/\2\2\u0150\u0151"+
		"\7\'\2\2\u0151\u0152\7O\2\2\u0152\u0153\7C\2\2\u0153\u0154\7K\2\2\u0154"+
		"\u0155\7P\2\2\u0155\u0157\3\2\2\2\u0156\u0158\7=\2\2\u0157\u0156\3\2\2"+
		"\2\u0157\u0158\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b\63\5\2\u015a"+
		"f\3\2\2\2\u015b\u015c\13\2\2\2\u015ch\3\2\2\2\r\2\u0116\u011b\u0121\u0127"+
		"\u0132\u0136\u0139\u013c\u0146\u0157";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}